version: 2.1

parameters:
  build-rust:
    type: boolean
    default: false
  build-docs:
    type: boolean
    default: false

workflows:
  build-and-test:
    when: << pipeline.parameters.build-rust >>
    jobs:
      - test-rust-ubuntu:
          matrix:
            parameters:
              os: [ubuntu_2004_amd64, ubuntu_2204_amd64, ubuntu_2204_aarch64]
      - test-rust-amazon:
          matrix:
            parameters:
              os: [amazon2_amd64, amazon2023_amd64, amazon2023_aarch64]
      - test-rust-rocky:
          matrix:
            parameters:
              os: [rocky8_amd64, rocky9_amd64]
  docs:
    when: << pipeline.parameters.build-docs >>
    jobs:
      - docs

executors:
  amazon2_amd64:
    docker:
      - image: ghcr.io/kumocorp/builder-for-amazonlinux:2
    resource_class: xlarge
  amazon2023_amd64:
    docker:
      - image: ghcr.io/kumocorp/builder-for-amazonlinux:2023
    resource_class: xlarge
  amazon2023_aarch64:
    docker:
      - image: ghcr.io/kumocorp/builder-for-aarch64-amazonlinux:2023
    resource_class: arm.xlarge

  rocky8_amd64:
    docker:
      - image: ghcr.io/kumocorp/builder-for-rockylinux:8
    resource_class: xlarge
  rocky9_amd64:
    docker:
      - image: ghcr.io/kumocorp/builder-for-rockylinux:9
    resource_class: xlarge

  ubuntu_2004_amd64:
    docker:
      - image: ghcr.io/kumocorp/builder-for-ubuntu:20.04
    resource_class: xlarge
  ubuntu_2204_amd64:
    docker:
      - image: ghcr.io/kumocorp/builder-for-ubuntu:22.04
    resource_class: xlarge
  ubuntu_2204_aarch64:
    docker:
      - image: ghcr.io/kumocorp/builder-for-aarch64-ubuntu:22.04
    resource_class: arm.xlarge

jobs:
  test-rust-amazon:
    parameters:
      os:
        type: executor
    executor: << parameters.os >>
    environment:
      KUMOD_TESTCONTAINERS: 0
      CARGO_INCREMENTAL: 0
      # These are needed because amazonlinux:2 has both `openssl-devel`
      # and `openssl11-devel` and the latter, newer version, isn't
      # automatically found by the rust openssl-sys build machinery
      OPENSSL_LIB_DIR: /usr/lib64
      OPENSSL_INCLUDE_DIR: /usr/include
      #ROCKSDB_LIB_DIR: /opt/kumomta/lib
      #ROCKSDB_STATIC: static
      #SNAPPY_LIB_DIR: /opt/kumomta/lib
      #SNAPPY_STATIC: static
      HOME: /root
    steps:
      - checkout
      - restore_cache:
          key: cargo-<< parameters.os.docker.image >>-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Build
          command: PATH=$PATH:/root/.cargo/bin make build
      - save_cache:
          key: cargo-<< parameters.os.docker.image >>-{{ arch }}-{{ checksum "Cargo.lock" }}
          paths:
            - ~/.cargo
      - run:
          name: Run Tests
          command: PATH=$PATH:/root/.cargo/bin make test
      - run:
          name: Build Release Package
          command: |
            PATH=$PATH:/root/.cargo/bin make build BUILD_OPTS="--release"
            ./assets/build-rpm.sh
      - save_cache:
          key: cargo-<< parameters.os.docker.image >>-{{ arch }}-{{ checksum "Cargo.lock" }}
          paths:
            - ~/.cargo
      - run:
          name: Verify That Package is Installable
          # FIXME: install in !builder but base image
          command: |
            yum install -y ./kumomta*.rpm


  test-rust-rocky:
    parameters:
      os:
        type: executor
    executor: << parameters.os >>
    environment:
      KUMOD_TESTCONTAINERS: 0
      CARGO_INCREMENTAL: 0
      #ROCKSDB_LIB_DIR: /opt/kumomta/lib
      #ROCKSDB_STATIC: static
      #SNAPPY_LIB_DIR: /opt/kumomta/lib
      #SNAPPY_STATIC: static
      HOME: /root
    steps:
      - checkout
      - restore_cache:
          key: cargo-<< parameters.os.docker.image >>-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Build
          command: PATH=$PATH:/root/.cargo/bin make build
      - save_cache:
          key: cargo-<< parameters.os.docker.image >>-{{ arch }}-{{ checksum "Cargo.lock" }}
          paths:
            - ~/.cargo
      - run:
          name: Run Tests
          command: PATH=$PATH:/root/.cargo/bin make test
      - run:
          name: Build Release Package
          command: |
            PATH=$PATH:/root/.cargo/bin make build BUILD_OPTS="--release"
            ./assets/build-rpm.sh
      - save_cache:
          key: cargo-<< parameters.os.docker.image >>-{{ arch }}-{{ checksum "Cargo.lock" }}
          paths:
            - ~/.cargo
      - run:
          name: Verify That Package is Installable
          # FIXME: install in !builder but base image
          command: |
            dnf install -y ./kumomta*.rpm


  test-rust-ubuntu:
    parameters:
      os:
        type: executor
    executor: << parameters.os >>
    #resource_class: xlarge
    environment:
      KUMOD_TESTCONTAINERS: 0
      CARGO_INCREMENTAL: 0
      ROCKSDB_LIB_DIR: /opt/kumomta/lib
      ROCKSDB_STATIC: static
      SNAPPY_LIB_DIR: /opt/kumomta/lib
      SNAPPY_STATIC: static
      HOME: /root
    steps:
      - checkout
      - restore_cache:
          key: cargo-<< parameters.os.docker.image >>-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Build
          command: PATH=$PATH:/root/.cargo/bin make build
      - save_cache:
          key: cargo-<< parameters.os.docker.image >>-{{ arch }}-{{ checksum "Cargo.lock" }}
          paths:
            - ~/.cargo
      - run:
          name: Run Tests
          command: PATH=$PATH:/root/.cargo/bin make test
      - run:
          name: Build Release Package
          command: |
            PATH=$PATH:/root/.cargo/bin make build BUILD_OPTS="--release"
            ./assets/build-deb.sh
      - save_cache:
          key: cargo-<< parameters.os.docker.image >>-{{ arch }}-{{ checksum "Cargo.lock" }}
          paths:
            - ~/.cargo
      - run:
          name: Verify That Package is Installable
          # FIXME: install in !builder but base image
          command: |
            apt update
            apt-get install -y ./kumomta*.deb

  docs:
    docker:
      - image: ghcr.io/kumocorp/builder-for-ubuntu:22.04
    steps:
      - checkout
      - restore_cache:
          key: cargo-docs-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Build docs
          command: PATH=$PATH:/root/.cargo/bin ./docs/build.sh
      - save_cache:
          key: cargo-docs-{{ arch }}-{{ checksum "Cargo.lock" }}
          paths:
            - ~/.cargo

