searchState.loadedDescShard("kumo_server_common", 0, "ConfigHandle allows sharing a configuration value of some …\nBorrows the local copy of the config for read. The local …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUpdates the upstream, shared value. Other config handles …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRepresents some authenticated identity. Use this as an …\nUse this type as an extractor parameter when the handler …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe NodeId is intended to identify a specific instance of …\nRaises an error if we don’t have a persistent unique …\nReturns the argument unchanged.\nGet the NodeId\nRetrieve just the uuid\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nUnique node id in the cluster\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")