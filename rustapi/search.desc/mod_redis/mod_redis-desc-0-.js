searchState.loadedDescShard("mod_redis", 0, "A response containing an array with more data. This is …\nAttribute value from the server. Client will give data …\nVery large number that out of the range of the signed 64 …\nA boolean response from the server.\nAn arbitrary binary data, usually represents a binary-safe …\nList of redis URLs for hosts in the cluster\nRepresents redis commands.\nA floating number response from the server.\nThis trait is used to convert a redis value into a more …\nAn integer response.  Note that there are a few situations …\nUnordered key,value list from the server. Use <code>as_map_iter</code> …\nA nil response from the server.\nA status response which represents the string “OK”.\nPush data from the server.\nRepresents a redis error.\nInternal low-level redis value enum.\nRepresents a lua script.\nRepresents a prepared script call.\nRepresents an error message from the server\nUnordered set value from the server.\nA simple string response, without line breaks and not …\nA single, non-clustered redis node\nFirst String is format and other is the string\nShows the available ACL categories. Redis Docs\nShows all the Redis commands in the specified category. …\nDelete all the specified ACL users and terminate all the …\nSimulate the execution of a given command by a given user. …\nGenerates a 256-bits password starting from /dev/urandom …\nGenerates a 1-to-1024-bits password starting from …\nReturns all the rules defined for an existing ACL user. …\nReturns a helpful text describing the different …\nShows the currently active ACL rules in the Redis server. …\nWhen Redis is configured to use an ACL file (with the …\nShows a list of recent ACL security events Redis Docs\nClears the ACL log. Redis Docs\nWhen Redis is configured to use an ACL file (with the …\nCreates an ACL user without any privilege. Redis Docs\nCreates an ACL user with the specified rules or modify the …\nShows a list of all the usernames of the currently …\nReturns the username the current connection is …\nAppend a value to a key. Returns length of string after …\nAdds a regular argument to the invocation.  This ends up …\nAppends an argument to the command.  The argument passed …\nCreates a script invocation object with an argument filled …\nReturns an iterator over the arguments in this command …\nReturns an iterator of <code>(&amp;Value, &amp;Value)</code> if <code>self</code> is …\nReturns an <code>&amp;[Value]</code> if <code>self</code> is compatible with a sequence …\nPerform a bitwise AND between multiple keys (containing …\nANDOR(X, Y1, Y2, …)  Perform an <strong>“intersection of </strong>…\nDIFF(X, Y1, Y2, …)  Perform a <strong>set difference</strong> to extract …\nDIFF1(X, Y1, Y2, …) (Relative complement difference)  …\nPerform a bitwise NOT of the key (containing string values)\nONE(X, Y1, Y2, …)  Perform an <strong>“exclusive membership”</strong> …\nPerform a bitwise OR between multiple keys (containing …\nPerform a bitwise XOR between multiple keys (containing …\nCount set bits in a string. Returns 0 if key does not …\nCount set bits in a string in a range. Returns 0 if key …\nPop an element from a list, push it to another list and …\nPops <code>count</code> elements from the first non-empty list key from …\nRemove and get the first element in a list, or block until …\nRemove and get the last element in a list, or block until …\nPop a value from a list, push it to another list and …\nRemoves and returns up to count members with the highest …\nRemoves and returns up to count members with the lowest …\nRemoves and returns the member with the highest score in a …\nRemoves and returns the member with the lowest score in a …\nReturns the name of the error category for display …\nClears the command, resetting it completely.\nReturns the name of the current connection as set by …\nReturns the ID of the current connection. Redis Docs\nCommand assigns a name to the current connection. Redis …\nShortcut function to creating a command with a single …\nReturns the raw error code if available.\nCopy the value from one key to another, returning whether …\nWorks similar to <code>arg</code> but adds a cursor argument.\nDecrement the numeric value of a key by the given amount. …\nDelete one or more keys. Returns the number of keys …\nReturns the error detail.\nThis is an alternative to `query`` that can be used if you …\nThis is an alternative to <code>query_async</code> that can be used if …\nThis is a shortcut to <code>query()</code> that does not return a value …\nDetermine if a key exists. Redis Docs\nSet a key’s time to live in seconds. Returns whether …\nSet the expiration for a key as a UNIX timestamp. Returns …\nGet the absolute Unix expiration timestamp in seconds. …\nReturns the extension error code.\nIf value contains a server error, return it as an Err. …\nDeletes all the keys of all databases\nDeletes all the keys of all databases with options\nDeletes all the keys of the current database\nDeletes all the keys of the current database with options\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert bytes to a single element vector.\nThe same as <code>from_owned_redis_values</code>, but returns a result …\nConvert bytes to a single element vector.\nGiven a redis <code>Value</code> this attempts to convert it into the …\nThe same as <code>from_redis_values</code>, but takes a <code>Vec&lt;Value&gt;</code> …\nGiven a redis <code>Value</code> this attempts to convert it into the …\nSimilar to <code>from_redis_value</code> but constructs a vector of …\nAdds the specified geospatial items to the specified key.\nReturn the distance between two members in the geospatial …\nReturn valid Geohash strings representing the position of …\nReturn the positions of all the specified members of the …\nReturn the members of a sorted set populated with …\nRetrieve members selected by distance with the center of …\nGet the value of a key.  If key is a vec this becomes an …\nGet the value of a key and delete it Redis Docs\nGet the value of a key and set expiration Redis Docs\nReturns the script’s SHA1 hash in hexadecimal format.\nReturns the packed command as a byte vector.\nReturns the bit value at offset in the string value stored …\nGet a range of bytes/substring from the value of a key. …\nSet the string value of a key and return its old value. …\nDeletes a single (or multiple) fields from a hash. Returns …\nChecks if a field in a hash exists. Redis Docs\nSet one or more fields’ time to live in seconds. Returns …\nSet the expiration for one or more fields as a UNIX …\nReturns the absolute Unix expiration timestamp in seconds. …\nGets a single (or multiple) fields from a hash.\nGet and delete the value of one or more fields of a given …\nGet the value of one or more fields of a given hash key, …\nGets all the fields and values in a hash. Redis Docs\nIncrements a value. Returns the new value of the field …\nGets all the keys in a hash. Redis Docs\nGets the length of a hash. Returns 0 if key does not exist.\nGets multiple fields from a hash. Redis Docs\nRemove the expiration from a key. Returns 1 if the …\nSet one or more fields’ time to live in milliseconds. …\nSet the expiration for one or more fields as a UNIX …\nReturns the absolute Unix expiration timestamp in seconds. …\nGet one or more fields’ TTL in milliseconds. Redis Docs\nSets a single field in a hash. Returns number of fields …\nSet the value of one or more fields of a given hash key, …\nSets multiple fields in a hash. Redis Docs\nSets a single field in a hash if it does not exist. …\nGet one or more fields’ TTL in seconds. Redis Docs\nGets all the values in a hash. Redis Docs\nReturns true if the command is in scan mode.\nIncrement the numeric value of a key by the given amount.  …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an iterator of <code>(Value, Value)</code> if <code>self</code> is …\nReturns a <code>Vec&lt;Value&gt;</code> if <code>self</code> is compatible with a sequence …\nInvokes the script and returns the result.\nInvokes the script directly without arguments.\nAsynchronously invokes the script and returns the result.\nAsynchronously invokes the script without arguments.\nInvoke a prepared script.\nIndicates that this is a cluster error.\nReturns true if error was caused by a dropped connection.\nReturns true if this error indicates that the connection …\nIndicates that this failure is an IO failure.\nCheck whether command’s result will be waited for.\nReturns true if error was caused by I/O time out. Note …\nReturns true if the error is likely to not be recoverable, …\nSimilar to <code>query()</code> but returns an iterator over the items …\nSimilar to <code>iter()</code> but returns an AsyncIter over the items …\nAdds a key argument to the invocation.  This ends up as …\nCreates a script invocation object with a key filled in.\nDetermine the type of key. Redis Docs\nGets all keys matching pattern Redis Docs\nReturns the kind of the error.\nGet an element from a list by its index. Redis Docs\nInsert an element after another element in a list. Redis …\nInsert an element before another element in a list. Redis …\nReturns the length of the list stored at key. Redis Docs\nPop an element a list, push it to another list and return …\nPops <code>count</code> elements from the first non-empty list key from …\nLoads the script and returns the SHA1 of it.\nLoads the script and returns the SHA1 of it.\nAsynchronously loads the script and returns the SHA1 of it.\nAsynchronously loads the script and returns the SHA1 of it.\nLoad a script.\nChecks if the return value looks like it fulfils the cursor\nRemoves and returns the up to <code>count</code> first elements of the …\nReturns the index of the first matching value of the list …\nInsert all the specified values at the head of the list …\nInserts a value at the head of the list stored at key, …\nReturns the specified elements of the list stored at key. …\nRemoves the first count occurrences of elements equal to …\nSets the list element at index to value Redis Docs\nTrim an existing list so that it will contain only the …\nGet values of keys Redis Docs\nSets multiple keys to their values. Redis Docs\nSets multiple keys to their values failing if at least one …\nCreates a new empty command.\nCreates a new script object.\nReturns the encoding of a key. Redis Docs\nReturns the logarithmic access frequency counter of a key. …\nReturns the time in seconds since the last access of a key.\nReturns the reference count of a key. Redis Docs\nRemove the expiration from a key. Returns whether a …\nSet a key’s time to live in milliseconds. Returns …\nSet the expiration for a key as a UNIX timestamp in …\nGet the absolute Unix expiration timestamp in milliseconds.\nAdds the specified elements to the specified HyperLogLog. …\nReturn the approximated cardinality of the set(s) observed …\nMerge N different HyperLogLogs into a single one. Redis …\nSends a ping to the server Redis Docs\nSends a ping with a message to the server Redis Docs\nMaximum number of connections managed by the pool. Default …\nReturns an empty script invocation object.  This is …\nSet the value and expiration in milliseconds of a key. …\nGet the time to live for a key in milliseconds. Returns …\nPosts a message to the given channel. Redis Docs\nSends the command as query to the connection and converts …\nAsync version of <code>query</code>.\nEnables reading from replicas for all new connections\nReturns the node the error refers to.\nRename a key. Errors if key does not exist. Redis Docs\nRename a key, only if the new key does not exist. Errors …\nSpecifies what method (if any) should be used to retry …\nRemoves and returns the up to <code>count</code> last elements of the …\nPop a value from a list, push it to another list and …\nInsert all the specified values at the tail of the list …\nInserts value at the tail of the list stored at key, only …\nAdd one or more members to a set. Redis Docs\nGet the number of members in a set. Redis Docs\nSubtract multiple sets. Redis Docs\nSubtract multiple sets and store the resulting set in a …\nSet the string value of a key. Redis Docs\nSet the value and expiration of a key. Redis Docs\nSets multiple keys to their values. Redis Docs\nClient won’t read and wait for results. Currently only …\nSet the value of a key, only if the key does not exist …\nSet the string value of a key with options. Redis Docs\nSets or clears the bit at offset in the string value …\nOverwrite the part of the value stored in key at the …\nIntersect multiple sets. Redis Docs\nIntersect multiple sets and store the resulting set in a …\nDetermine if a given value is a member of a set. Redis Docs\nGet all the members in a set. Redis Docs\nDetermine if given values are members of a set. Redis Docs\nMove a member from one set to another. Redis Docs\nRemove and return a random member from a set. Redis Docs\nPosts a message to the given sharded channel. Redis Docs\nGet one random member from a set. Redis Docs\nGet multiple random members from a set. Redis Docs\nRemove one or more members from a set. Redis Docs\nGet the length of the value stored in a key. 0 if key does …\nAdd multiple sets. Redis Docs\nAdd multiple sets and store the resulting set in a key. …\nGet the time to live for a key in seconds. Returns …\nUnlink one or more keys. This is a non-blocking version of …\nCreates a new empty command, with at least the requested …\nWrites the packed command to <code>dst</code>.\nAck pending stream messages checked out by a consumer.\nA combination of <code>XACK</code> and <code>XDEL</code> that acknowledges and …\nAdd a stream message by <code>key</code>. Use <code>*</code> as the <code>id</code> for the …\nBTreeMap variant for adding a stream message by <code>key</code>. Use <code>*</code> …\nAdd a stream message while capping the stream at a …\nBTreeMap variant for adding a stream message while capping …\nAdd a stream message with options.\nPerform a combined xpending and xclaim flow.\nClaim pending, unacked messages, after some period of time,\nThis is the optional arguments version for claiming …\nDeletes a list of <code>id</code>s for a given stream <code>key</code>.\nAn extension of the Streams <code>XDEL</code> command that provides …\nThis command is used for creating a consumer <code>group</code>. It …\nThis is the alternate version for creating a consumer <code>group</code>\nThis creates a <code>consumer</code> explicitly (vs implicit via …\nThis deletes a <code>consumer</code> from an existing consumer <code>group</code> …\nDestroy an existing consumer <code>group</code> for a given stream <code>key</code>\nAlter which <code>id</code> you want consumers to begin reading from an …\nThis returns all info details about which consumers have …\nReturns all consumer <code>group</code>s created for a given stream <code>key</code>.\nReturns info about high-level stream details (first &amp; last …\nReturns the number of messages for a given stream <code>key</code>.\nThis is a basic version of making XPENDING command calls …\nAn alternate version of <code>xpending_count</code> which filters by …\nThis XPENDING version returns a list of all messages over …\nReturns a range of messages in a given stream <code>key</code>.\nA helper method for automatically returning all messages …\nA method for paginating a stream by <code>key</code>.\nRead a list of <code>id</code>s for each stream <code>key</code>. This is the basic …\nThis method handles setting optional arguments for <code>XREAD</code> …\nThis is the reverse version of <code>xrange</code>. The same rules …\nThis is the reverse version of <code>xrange_all</code>. The same rules …\nThis is the reverse version of <code>xrange_count</code>. The same …\nTrim a stream <code>key</code> to a MAXLEN count.\nTrim a stream <code>key</code> with full options\nAdd one member to a sorted set, or update its score if it …\nAdd multiple members to a sorted set, or update its score …\nAdd multiple members to a sorted set, or update its score …\nAdd one member to a sorted set, or update its score if it …\nGet the number of members in a sorted set. Redis Docs\nCount the members in a sorted set with scores within the …\nIncrements the member in a sorted set at key by delta. If …\nIntersect multiple sorted sets and store the resulting …\nIntersect multiple sorted sets and store the resulting …\n<code>Commands::zinterstore_max</code>, but with the ability to specify …\nIntersect multiple sorted sets and store the resulting …\n<code>Commands::zinterstore_min</code>, but with the ability to specify …\n<code>Commands::zinterstore</code>, but with the ability to specify a …\nCount the number of members in a sorted set between a …\nRemoves and returns up to count members with the highest …\nRemoves and returns up to count members with the lowest …\nRemoves and returns up to count members with the highest …\nRemoves and returns up to count members with the lowest …\nReturn up to count random members in a sorted set (or 1 if …\nReturn up to count random members in a sorted set with …\nReturn a range of members in a sorted set, by index Redis …\nReturn a range of members in a sorted set, by index with …\nReturn a range of members in a sorted set, by …\nReturn a range of members in a sorted set, by …\nReturn a range of members in a sorted set, by score. Redis …\nReturn a range of members in a sorted set, by score with …\nReturn a range of members in a sorted set, by score with …\nReturn a range of members in a sorted set, by score with …\nDetermine the index of a member in a sorted set. Redis Docs\nRemove one or more members from a sorted set. Redis Docs\nRemove all members in a sorted set between the given …\nRemove all members in a sorted set within the given scores.\nRemove all members in a sorted set within the given …\nReturn a range of members in a sorted set, by index, …\nReturn a range of members in a sorted set, by index, with …\nReturn a range of members in a sorted set, by …\nReturn a range of members in a sorted set, by …\nReturn a range of members in a sorted set, by score. Redis …\nReturn a range of members in a sorted set, by score with …\nReturn a range of members in a sorted set, by score with …\nReturn a range of members in a sorted set, by score with …\nDetermine the index of a member in a sorted set, with …\nGet the score associated with the given member in a sorted …\nGet the scores associated with multiple members in a …\nUnions multiple sorted sets and store the resulting sorted …\nUnions multiple sorted sets and store the resulting sorted …\n<code>Commands::zunionstore_max</code>, but with the ability to specify …\nUnions multiple sorted sets and store the resulting sorted …\n<code>Commands::zunionstore_min</code>, but with the ability to specify …\n<code>Commands::zunionstore</code>, but with the ability to specify a …\nKey,Value list of attributes.\nData that attributes belong to.\nRemaining data from push message\nText’s format type\nPush Kind\nRemaining string check format before using!\nA local redis server for executing tests against\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck whether redis is available to run as a cluster. We …")