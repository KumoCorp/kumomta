searchState.loadedDescShard("kumo_log_types", 0, "Administratively failed\nAdministratively rebound from one queue to another\nSpecial for matching anything in the logging config\nMoved from the special deferred injection queue and into …\nExplains why a message was put into the scheduled queue\nRecorded by the delivery side, most likely as a result of …\nRecorded when a message is expiring from the queue\nContains a feedback report\nContains information about an OOB bounce\nRecorded by a receiving listener\nSMTP Listener responded with a 4xx or 5xx\nMessage was received from another kumomta node, and we are …\nMessage was transferred to another kumomta node, which is …\nThe time at which the message was initially received and …\nThe protocol used to deliver, or attempt to deliver, this …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe message id\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if it makes sense to run the corresponding …\nWhat kind of record this is\nThe id of the node on which the event occurred\nThe number of delivery attempts that have been made. Note …\nThe address of the peer, and our sense of its hostname or …\nThe provider name, if any. This is a way of grouping …\nWhich named queue the message was associated with\nThe protocol used to receive this message\nThe envelope recipient\nThe response from/to the peer\nThis module parses out RFC3464 delivery status reports …\nARF reports\nThe envelope sender\nUuid identifying a connection/session for either inbound …\nWhich MX site the message was being delivered to\nThe size of the message, in bytes\nThe time at which we are logging this event\nThe TLS Cipher used, if applicable\nThe Subject Name from the peer TLS certificate, if …\nThe TLS protocol version used, if applicable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nmsg: the message that experienced an issue log: the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhen used for testing, use a stable mime boundary\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")