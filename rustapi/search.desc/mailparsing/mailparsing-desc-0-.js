searchState.loadedDescShard("mailparsing", 0, "Contains the error value\nRepresents an ordered list of headers. Note that there may …\nHolds the result of parsing a block of headers\nContains the success value\nReferences the position of a MimePart by encoding the …\nHelper for holding either an owned or borrowed string, and …\nGet a flags value with all known bits set.\nJoin other onto self, consuming self and producing a …\nParse the header into a mailbox (as defined in RFC 5322), …\nParse the header into a mailbox-list (as defined in RFC …\nall other (terminal) parts are attachments\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nDecode transfer decoding and return the body\nObtain a reference to the child parts\nObtain a mutable reference to the child parts\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nRetrieve the value for a named parameter. This method will …\nThe “top level” set of headers for the message\nObtains a reference to the headers\nObtain a mutable reference to the headers\nThe primary text/html part\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nConstructs a new part with textual utf8 content. …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nConstruct a PartPointer that references the nth child\nDecode all named parameters per RFC 2231 and return a map …\nParse some data into a tree of MimeParts\nGet the raw, transfer-encoded body\nRe-constitute the header. The header value will be parsed …\nRe-constitute the message. Each element will be parsed …\nThe intersection of a source flags value with the …\nRemove the named parameter\nResolve a PartPointer to the corresponding MimePart\nResolve a PartPointer to the corresponding MimePart, for …\nConstruct a PartPointer that references the root node\nConstruct a PartPointer that references either the nth or …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nReturns a SimplifiedStructure representation of the mime …\nReturns a set of PartPointers that locate the (probable) …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe primary text/plain part\nConvenience method wrapping write_header that returns the …\nConvenience method wrapping write_message that returns the …\nObtain a version of self that has a static lifetime\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nFormat the header into the provided output stream, as …\nWrite the message content to the provided output stream")