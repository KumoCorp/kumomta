labels:
  platform: linux/amd64

matrix:
  include:
    - ROCKY_VERSION: 8
      ROCKY_IMAGE: rockylinux:8
      BUILDER_IMAGE: ghcr.io/kumocorp/builder-for-rockylinux:8
      UBUNTU_BUILDER_IMAGE: ghcr.io/kumocorp/builder-for-ubuntu:22.04
    - ROCKY_VERSION: 9
      ROCKY_IMAGE: rockylinux:9
      BUILDER_IMAGE: ghcr.io/kumocorp/builder-for-rockylinux:9
      UBUNTU_BUILDER_IMAGE: ghcr.io/kumocorp/builder-for-ubuntu:22.04

when:
  - event: push
    branch:
      - main
    path: &paths
      include:
        - .woodpecker/rocky.yml
        - "**/Cargo.toml"
        - Cargo.lock
        - assets/ci/populate-cache-vars.sh
        - assets/**/*.lua
        - assets/*.service
        - assets/*rpm*.sh
        - assets/accounting.sh
        - assets/bounce_classifier/**
        - assets/install.sh
        - assets/policy-extras/**
        - assets/run-lua-test
        - crates/**
  - event: tag
    branch:
      - main
  - event: pull_request
    path: *paths
  - event: manual

variables:
  - &docker_credentials
      username:
        from_secret: gh_package_publish_user
      password:
        from_secret: gh_package_publish_token

steps:
  whoami:
    image: alpine:latest
    commands:
      - printenv CI_MACHINE

  pull-builder-image:
    image: ${BUILDER_IMAGE}
    pull: true
    commands:
      - "true"

  setup-cache:
    depends_on: [pull-builder-image]
    image: ${BUILDER_IMAGE}
    environment:
      GROUP: "rockylinux-${ROCKY_VERSION}"
    commands:
      - ./assets/ci/populate-cache-vars.sh

  test:
    depends_on: [setup-cache]
    environment:
      CARGO_TERM_COLOR: always
    image: ${BUILDER_IMAGE}
    commands:
      - . ./.cache-env
      - git config --global --add safe.directory /woodpecker/src
      - make test

  build:
    depends_on: [test]
    environment:
      CARGO_TERM_COLOR: always
    image: ${BUILDER_IMAGE}
    commands:
      - . ./.cache-env
      - make build BUILD_OPTS="--release"
      - ./assets/build-rpm.sh
      - "mv ~/rpmbuild/RPMS/*/*.rpm ."

  verify-installable:
    depends_on: [build]
    image: ${ROCKY_IMAGE}
    commands:
      - dnf install -y ./kumomta*.rpm

  sign-rpm:
    depends_on: [verify-installable]
    image: ${BUILDER_IMAGE}
    when:
      - evaluate: '(CI_PIPELINE_EVENT == "push" && CI_COMMIT_BRANCH == "main") || CI_PIPELINE_EVENT == "tag"'
    environment:
      TOKEN:
        from_secret: openrepo_publish_token
      PUB:
        from_secret: openrepo_gpg_public
      PRIV:
        from_secret: openrepo_gpg_private
    commands:
      - "./assets/sign-rpm.sh *.rpm"

  publish-gh-dev:
    depends_on: [sign-rpm]
    image: ${UBUNTU_BUILDER_IMAGE}
    pull: true
    when:
      - evaluate: '(CI_PIPELINE_EVENT == "push" && CI_COMMIT_BRANCH == "main")'
    environment:
      GITHUB_TOKEN:
        from_secret: gh_pages_deploy_token
      TOKEN:
        from_secret: package_build_token
    commands:
      - "bash ./assets/ci/retry.sh gh release upload --clobber dev *.rpm"

  publish-gh-tag:
    depends_on: [sign-rpm]
    image: ${UBUNTU_BUILDER_IMAGE}
    pull: true
    when:
      - evaluate: 'CI_PIPELINE_EVENT == "tag"'
    environment:
      GITHUB_TOKEN:
        from_secret: gh_pages_deploy_token
      TOKEN:
        from_secret: package_build_token
    commands:
      - "bash ./assets/ci/retry.sh bash ./assets/ci/create-release.sh *.rpm"

