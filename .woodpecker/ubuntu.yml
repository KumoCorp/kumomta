matrix:
  include:
    - UBUNTU_VERSION: 22.04
      UBUNTU_IMAGE: ubuntu:22.04
      BUILDER_IMAGE: ghcr.io/kumocorp/builder-for-ubuntu:22.04
      platform: linux/amd64
    - UBUNTU_VERSION: 20.04
      UBUNTU_IMAGE: ubuntu:20.04
      BUILDER_IMAGE: ghcr.io/kumocorp/builder-for-ubuntu:20.04
      platform: linux/amd64
    - UBUNTU_VERSION: 22.04
      UBUNTU_IMAGE: ubuntu:22.04
      BUILDER_IMAGE: ghcr.io/kumocorp/builder-for-aarch64-ubuntu:22.04
      platform: linux/aarch64

labels:
  platform: ${platform}

when:
  - event: push
    branch:
      - main
    path: &paths
      include:
        - .woodpecker/ubuntu.yml
        - "**/Cargo.toml"
        - Cargo.lock
        - assets/**/*.lua
        - assets/*.service
        - assets/*deb*.sh
        - assets/accounting.sh
        - assets/bounce_classifier/**
        - assets/install.sh
        - assets/policy-extras/**
        - crates/**
        - docker/**
  - event: tag
    branch:
      - main
  - event: pull_request
    path: *paths
  - event: manual

variables:
  - &docker_credentials
      username:
        from_secret: gh_package_publish_user
      password:
        from_secret: gh_package_publish_token

steps:
  restore-mtime:
    image: python:3-bookworm
    commands:
      - git config --global --add safe.directory /woodpecker/src
      - ./assets/ci/git-restore-mtime crates
      - git diff-index --name-status HEAD --

  restore-build-cache:
    image: &cache_image meltwater/drone-cache
    when:
      - evaluate: 'CI_PIPELINE_EVENT != "cron"'
    settings: &cache_settings
      backend: filesystem
      filesystem_cache_root: /build-cache
      cache_key: ubuntu:${UBUNTU_VERSION}_{{ arch }}_{{ os }}
      mount:
        - .ci-cargo
        - target
      rebuild: "false"
      restore: "true"

  test:
    depends_on: [restore-mtime, restore-build-cache]
    environment:
      CARGO_HOME: .ci-cargo
      CARGO_TERM_COLOR: always
    image: ${BUILDER_IMAGE}
    commands:
      - PATH=$PATH:$HOME/.cargo/bin
      - git config --global --add safe.directory /woodpecker/src
      - make test

  build:
    depends_on: [test]
    environment:
      CARGO_HOME: .ci-cargo
      CARGO_TERM_COLOR: always
    image: ${BUILDER_IMAGE}
    commands:
      - PATH=$PATH:$HOME/.cargo/bin
      - make build BUILD_OPTS="--release"
      - ./assets/build-deb.sh

  save-build-cache:
    depends_on: [build]
    when:
      - evaluate: '(CI_PIPELINE_EVENT == "push" && CI_COMMIT_BRANCH == "main") or (CI_PIPELINE_EVENT == "cron") or (CI_PIPELINE_EVENT == "manual")'
    image: *cache_image
    settings:
      <<: *cache_settings
      rebuild: "true"
      restore: "false"

  verify-installable:
    depends_on: [build]
    image: ${UBUNTU_IMAGE}
    commands:
      - apt update
      - apt-get install -y ./kumomta*.deb

  publish_deb:
    depends_on: [verify-installable]
    image: alpine:3.14
    when:
      - evaluate: '(CI_PIPELINE_EVENT == "push" && CI_COMMIT_BRANCH == "main") || CI_PIPELINE_EVENT == "tag"'
    environment:
      TOKEN:
        from_secret: openrepo_publish_token
    commands:
      - "apk --no-cache add curl bash"
      - "./assets/upload-package.sh ${UBUNTU_IMAGE} *.deb"

  dry-run-build-docker-image:
    depends_on: [build]
    when:
      - evaluate: 'UBUNTU_IMAGE == "ubuntu:22.04" && (CI_PIPELINE_EVENT == "pull_request" || (CI_PIPELINE_EVENT == "push" && CI_COMMIT_BRANCH != "main"))'
    image: plugins/docker
    settings:
      registry: ghcr.io
      repo: "ghcr.io/kumocorp/kumomta-dev"
      dry_run: true
      tags:
        - dry-run
      dockerfile: docker/kumod/Dockerfile.incremental

  build-dev-docker-image:
    depends_on: [publish_deb]
    when:
      - evaluate: 'platform == "linux/amd64" && UBUNTU_IMAGE == "ubuntu:22.04" && CI_PIPELINE_EVENT == "push" && CI_COMMIT_BRANCH == "main"'
    image: plugins/docker
    settings:
      <<: *docker_credentials
      registry: ghcr.io
      repo: "ghcr.io/kumocorp/kumomta-dev"
      tags:
        - latest
      dockerfile: docker/kumod/Dockerfile.incremental

  build-docker-image:
    depends_on: [publish_deb]
    when:
      - evaluate: 'platform == "linux/amd64" && UBUNTU_IMAGE == "ubuntu:22.04" && CI_PIPELINE_EVENT == "tag"'
    image: plugins/docker
    settings:
      <<: *docker_credentials
      registry: ghcr.io
      repo: "ghcr.io/kumocorp/kumomta"
      tags:
        - latest
        - ${CI_COMMIT_TAG}
      dockerfile: docker/kumod/Dockerfile.incremental
