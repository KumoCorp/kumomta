matrix:
  include:
    - UBUNTU_VERSION: 22.04
      UBUNTU_IMAGE: ubuntu:22.04
      BUILDER_IMAGE: ghcr.io/kumocorp/builder-for-ubuntu:22.04
      platform: linux/amd64
    - UBUNTU_VERSION: 20.04
      UBUNTU_IMAGE: ubuntu:20.04
      BUILDER_IMAGE: ghcr.io/kumocorp/builder-for-ubuntu:20.04
      platform: linux/amd64
    - UBUNTU_VERSION: 22.04
      UBUNTU_IMAGE: ubuntu:22.04
      BUILDER_IMAGE: ghcr.io/kumocorp/builder-for-aarch64-ubuntu:22.04
      platform: linux/aarch64

labels:
  platform: ${platform}

when:
  - event: push
    branch:
      - main
    path: &paths
      include:
        - .woodpecker/ubuntu.yml
        - "**/Cargo.toml"
        - Cargo.lock
        - assets/ci/populate-cache-vars.sh
        - assets/**/*.lua
        - assets/*.service
        - assets/*deb*.sh
        - assets/accounting.sh
        - assets/bounce_classifier/**
        - assets/install.sh
        - assets/policy-extras/**
        - assets/run-lua-test
        - crates/**
        - docker/**
  - event: tag
    branch:
      - main
  - event: pull_request
    path: *paths
  - event: manual

variables:
  - &docker_credentials
      username:
        from_secret: gh_package_publish_user
      password:
        from_secret: gh_package_publish_token

steps:
  restore-mtime:
    image: python:3-bookworm
    commands:
      - git config --global --add safe.directory /woodpecker/src
      - ./assets/ci/git-restore-mtime crates
      - git diff-index --name-status HEAD --

  setup-cache:
    image: ${BUILDER_IMAGE}
    pull: true
    environment:
      GROUP: "ubuntu-${UBUNTU_VERSION}"
    commands:
      - ./assets/ci/populate-cache-vars.sh

  test:
    depends_on: [restore-mtime, setup-cache]
    environment:
      CARGO_TERM_COLOR: always
    image: ${BUILDER_IMAGE}
    commands:
      - . ./.cache-env
      - git config --global --add safe.directory /woodpecker/src
      - make test

  build:
    depends_on: [test]
    environment:
      CARGO_TERM_COLOR: always
    image: ${BUILDER_IMAGE}
    commands:
      - . ./.cache-env
      - make build BUILD_OPTS="--release"
      - ./assets/build-deb.sh

  verify-installable:
    depends_on: [build]
    image: ${UBUNTU_IMAGE}
    commands:
      - apt update
      - apt-get install -y ./kumomta*.deb

  publish-gh-dev:
    depends_on: [verify-installable]
    image: ${BUILDER_IMAGE}
    when:
      - evaluate: '(CI_PIPELINE_EVENT == "push" && CI_COMMIT_BRANCH == "main")'
    environment:
      GITHUB_TOKEN:
        from_secret: gh_pages_deploy_token
      TOKEN:
        from_secret: package_build_token
    commands:
      - "bash ./assets/ci/retry.sh gh release upload --clobber dev *.deb"
      - ./assets/ci/notify-package-server.sh

  publish-gh-tag:
    depends_on: [verify-installable]
    image: ${BUILDER_IMAGE}
    when:
      - evaluate: 'CI_PIPELINE_EVENT == "tag"'
    environment:
      GITHUB_TOKEN:
        from_secret: gh_pages_deploy_token
      TOKEN:
        from_secret: package_build_token
    commands:
      - "bash ./assets/ci/retry.sh bash ./assets/ci/create-release.sh *.deb"
      - ./assets/ci/notify-package-server.sh

  # Docker image build test on PRs

  dry-run-build-docker-image:
    depends_on: [build]
    when:
      - evaluate: 'UBUNTU_IMAGE == "ubuntu:22.04" && (CI_PIPELINE_EVENT == "pull_request" || (CI_PIPELINE_EVENT == "push" && CI_COMMIT_BRANCH != "main"))'
    image: plugins/docker
    settings:
      registry: ghcr.io
      repo: "ghcr.io/kumocorp/kumomta-dev"
      dry_run: true
      tags:
        - dry-run
      dockerfile: docker/kumod/Dockerfile.incremental

  # Docker image for releases

  build-docker-image:
    depends_on: [verify-installable]
    when:
      - evaluate: 'platform == "linux/amd64" && UBUNTU_IMAGE == "ubuntu:22.04" && CI_PIPELINE_EVENT == "tag"'
    image: plugins/docker
    settings:
      <<: *docker_credentials
      registry: ghcr.io
      repo: "ghcr.io/kumocorp/kumomta"
      tags:
        - latest-amd64
        - ${CI_COMMIT_TAG}-amd64
      dockerfile: docker/kumod/Dockerfile.incremental

  build-docker-image-arm:
    depends_on: [verify-installable]
    when:
      - evaluate: 'platform == "linux/aarch64" && UBUNTU_IMAGE == "ubuntu:22.04" && CI_PIPELINE_EVENT == "tag"'
    image: plugins/docker
    settings:
      <<: *docker_credentials
      registry: ghcr.io
      repo: "ghcr.io/kumocorp/kumomta"
      tags:
        - latest-arm64
        - ${CI_COMMIT_TAG}-arm64
      dockerfile: docker/kumod/Dockerfile.incremental

  merge-docker-image-arm:
    depends_on: [build-docker-image-arm]
    when:
      - evaluate: 'platform == "linux/aarch64" && UBUNTU_IMAGE == "ubuntu:22.04" && CI_PIPELINE_EVENT == "tag"'
    image: plugins/manifest
    failure: ignore
    settings: &docker_manifest_settings_tag
      <<: *docker_credentials
      target: "ghcr.io/kumocorp/kumomta-dev"
      template: "ghcr.io/kumocorp/kumomta:${CI_COMMIT_TAG}-ARCH"
      tags:
        - latest
        - ${CI_COMMIT_TAG}
      platforms:
        - linux/amd64
        - linux/arm64

  merge-docker-image:
    depends_on: [build-docker-image]
    when:
      - evaluate: 'platform == "linux/amd64" && UBUNTU_IMAGE == "ubuntu:22.04" && CI_PIPELINE_EVENT == "tag"'
    image: plugins/manifest
    failure: ignore
    settings:
      <<: *docker_manifest_settings_tag

  # Docker image for -dev builds

  build-dev-docker-image:
    depends_on: [verify-installable]
    when:
      - evaluate: 'platform == "linux/amd64" && UBUNTU_IMAGE == "ubuntu:22.04" && CI_PIPELINE_EVENT == "push" && CI_COMMIT_BRANCH == "main"'
    image: plugins/docker
    settings:
      <<: *docker_credentials
      registry: ghcr.io
      repo: "ghcr.io/kumocorp/kumomta-dev"
      tags:
        - commit-${CI_COMMIT_SHA:0:8}-amd64
        - latest-amd64
      dockerfile: docker/kumod/Dockerfile.incremental

  build-dev-docker-image-arm:
    depends_on: [verify-installable]
    when:
      - evaluate: 'platform == "linux/aarch64" && UBUNTU_IMAGE == "ubuntu:22.04" && CI_PIPELINE_EVENT == "push" && CI_COMMIT_BRANCH == "main"'
    image: plugins/docker
    settings:
      <<: *docker_credentials
      registry: ghcr.io
      repo: "ghcr.io/kumocorp/kumomta-dev"
      tags:
        - commit-${CI_COMMIT_SHA:0:8}-arm64
        - latest-arm64
      dockerfile: docker/kumod/Dockerfile.incremental

  merge-dev-docker-image-arm:
    depends_on: [build-dev-docker-image-arm]
    when:
      - evaluate: 'platform == "linux/aarch64" && UBUNTU_IMAGE == "ubuntu:22.04" && CI_PIPELINE_EVENT == "push" && CI_COMMIT_BRANCH == "main"'
    image: plugins/manifest
    failure: ignore
    settings: &docker_manifest_settings
      <<: *docker_credentials
      target: "ghcr.io/kumocorp/kumomta-dev"
      template: "ghcr.io/kumocorp/kumomta-dev:commit-${CI_COMMIT_SHA:0:8}-ARCH"
      tags:
        - latest
        - commit-${CI_COMMIT_SHA:0:8}
      platforms:
        - linux/amd64
        - linux/arm64

  merge-dev-docker-image:
    depends_on: [build-dev-docker-image]
    when:
      - evaluate: 'platform == "linux/amd64" && UBUNTU_IMAGE == "ubuntu:22.04" && CI_PIPELINE_EVENT == "push" && CI_COMMIT_BRANCH == "main"'
    image: plugins/manifest
    failure: ignore
    settings:
      <<: *docker_manifest_settings

