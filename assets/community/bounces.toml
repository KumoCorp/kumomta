# THIS FILE IS FOR COMMUNITY CONTRIBUTED BOUNCE CLASSIFICATION RULES
# THESE ARE PROVIDED AS-IS BY THEIR RESPECTIVE CONTRIBUTERS
# THIS FILE SHOULD BE USED IN COMBINATION WITH iana.toml TO GET FULL
# COVERAGE INCLUDING STATUS CODE BASED RULES.

# THIS FILE IS OVERWRITTEN DURING UPDATES, IF YOU MAKE CHANGES TO THIS FILE
# YOU WILL NEED TO DO A PULL REQUEST TO THE REPO AND HAVE IT ACCEPTED FOR 
# YOUR CHANGES TO PERSIST, OTHERWISE MAKE THESE CHANGES TO YOUR OWN CUSTOM
# BOUNCE RULES FILE:
# -- load the community bounces.toml + iana.toml + local settings
# kumo.on('init', function()
# kumo.configure_local_logs {
#  log_dir = '/var/log/kumomta',
# }
# kumo.configure_bounce_classifier {
#  files = {
#   '/opt/kumomta/etc/policy/bounces.toml',
#   '/opt/kumomta/share/community/bounces.toml',
#    '/opt/kumomta/share/bounce_classifier/iana.toml',
#  },
# }
# end)

[rules]
InvalidRecipient = [
]
BadDomain = [
]
InactiveMailbox = [
]
InvalidSender = [
]
QuotaIssues = [
  "account is temporarily suspended",
  "mailbox .*full",
  "mailbox has exceeded the limit",
  "mailbox quota",
  "mailbox size limit exceeded",
  "mailbox temporarily disabled",
  "mailbox temporarily unavailable",
  "mailbox temporary unavailable",
  "over quota",
  "quota exceeded",
  "recipient overquota",
  "this account is temporarily disabled",
  "this address is over storage limit",
]
NoAnswerFromHost = [
]
BadConnection = [
]
DNSFailure = [
]
RoutingErrors = [
]
TransientFailure = [
]
MessageExpired = [
]
ProtocolErrors = [
]
AuthenticationFailed = [
]
PolicyRelated = [
]
ReputationBlock = [
  "black.*list",
  "block.*list",
  "blocked",
  "dnsbl",
  "ip is rejected",
  "policy rejection",
  "rejected due to.*reputation",
  "sender denied",
  "spamrl",
  "uceprotect",
]
SpamBlock = [
  "High probability of spam",
  "High scoring spam message has been dropped",
  "This email from IP SENDERIP has been rejected\\. The email message was detected as spam"
  "This email has been rejected\\. The email message was detected as spam"
]